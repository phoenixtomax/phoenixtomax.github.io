<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-06-10T11:22:18+08:00</updated><id>http://localhost:4000/</id><title type="html">Skipper’s Space</title><subtitle>Technical Material Collection</subtitle><entry><title type="html">Caffe models</title><link href="http://localhost:4000/2018/07/09/Caffe-Models.html" rel="alternate" type="text/html" title="Caffe models" /><published>2018-07-09T00:00:00+08:00</published><updated>2018-07-09T00:00:00+08:00</updated><id>http://localhost:4000/2018/07/09/Caffe%20Models</id><content type="html" xml:base="http://localhost:4000/2018/07/09/Caffe-Models.html">&lt;h1 id=&quot;caffe-models&quot;&gt;Caffe Models&lt;/h1&gt;

&lt;h3 id=&quot;resnet&quot;&gt;ResNet&lt;/h3&gt;

&lt;h3 id=&quot;squeezenet&quot;&gt;SqueezeNet&lt;/h3&gt;

&lt;h3 id=&quot;wordnet-wordnet-id-synset&quot;&gt;WordNet (WordNet ID/ synset)&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
Refs: http://image-net.org/download-API
&lt;/code&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Caffe Models ResNet SqueezeNet WordNet (WordNet ID/ synset) Refs: http://image-net.org/download-API</summary></entry><entry><title type="html">Caffe dataset</title><link href="http://localhost:4000/2018/07/09/Caffe-Dataset.html" rel="alternate" type="text/html" title="Caffe dataset" /><published>2018-07-09T00:00:00+08:00</published><updated>2018-07-09T00:00:00+08:00</updated><id>http://localhost:4000/2018/07/09/Caffe%20Dataset</id><content type="html" xml:base="http://localhost:4000/2018/07/09/Caffe-Dataset.html">&lt;h1 id=&quot;caffe-dataset&quot;&gt;Caffe Dataset&lt;/h1&gt;</content><author><name></name></author><summary type="html">Caffe Dataset</summary></entry><entry><title type="html">Caffe tools</title><link href="http://localhost:4000/2018/07/08/Caffe-Tools.html" rel="alternate" type="text/html" title="Caffe tools" /><published>2018-07-08T00:00:00+08:00</published><updated>2018-07-08T00:00:00+08:00</updated><id>http://localhost:4000/2018/07/08/Caffe%20Tools</id><content type="html" xml:base="http://localhost:4000/2018/07/08/Caffe-Tools.html">&lt;h1 id=&quot;caffe-tools&quot;&gt;Caffe Tools&lt;/h1&gt;

&lt;h3 id=&quot;file-suffix&quot;&gt;File suffix&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;.binaryprototxt: The mean value of input images.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;.prototxt
1) solver.prototxt:          Wrap configuration of caffe training
2) .prototxt:                Layer descriptions
   deploy.prototxt is similiar to train_val.prototxt.
   BUT They are different.&lt;/p&gt;

    &lt;p&gt;I.  deploy.prototxt:       raw model&lt;/p&gt;

    &lt;p&gt;Data Layer&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   name: &quot;CaffeNet&quot;                                             
   layer {                                                      
     name: &quot;data&quot;                                               
     type: &quot;Input&quot;                                              
     top: &quot;data&quot;                                                
     input_param { shape: { dim: 10 dim: 3 dim: 227 dim: 227 } }
   }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Softmax&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   layer {          
     name: &quot;prob&quot;   
     type: &quot;Softmax&quot;
     bottom: &quot;fc8&quot;  
     top: &quot;prob&quot;    
   }                
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;II. train_val.prototxt:    configured model for training or testing.&lt;/p&gt;

    &lt;p&gt;Data Layer&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   name: &quot;CaffeNet&quot;
   layer {
     name: &quot;data&quot;
     type: &quot;Data&quot;                                          
     top: &quot;data&quot;
     top: &quot;label&quot;                                          
     include {                                             
       phase: TRAIN                                        
     }                                                     
     transform_param {                                     
       mirror: true                                        
       crop_size: 227                                      
       mean_file: &quot;data/ilsvrc12/imagenet_mean.binaryproto&quot;
     }                                                     
   # mean pixel / channel-wise mean instead of mean image  
   #  transform_param {                                    
   #    crop_size: 227                                     
   #    mean_value: 104                                    
   #    mean_value: 117                                    
   #    mean_value: 123                                    
   #    mirror: true                                       
   #  }                                                    
     data_param {                                          
       source: &quot;examples/imagenet/ilsvrc12_train_lmdb&quot;     
       batch_size: 256                                     
       backend: LMDB                                       
     }                                                     
   }                                                                                                 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Accuracy&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   layer {                  
     name: &quot;accuracy&quot;       
     type: &quot;Accuracy&quot;       
     bottom: &quot;fc8&quot;          
     bottom: &quot;label&quot;        
     top: &quot;accuracy&quot;        
     include {              
       phase: TEST          
     }                      
   }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Softmax&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   layer {                   
     name: &quot;loss&quot;            
     type: &quot;SoftmaxWithLoss&quot; 
     bottom: &quot;fc8&quot;           
     bottom: &quot;label&quot;         
     top: &quot;loss&quot;             
   }                         
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;h4 id=&quot;grammary&quot;&gt;Grammary&lt;/h4&gt;
    &lt;p&gt;bottom: the input of layer&lt;/p&gt;

    &lt;p&gt;up: the output of layer&lt;/p&gt;

    &lt;p&gt;include {}:  specify phase(TEST/TRAIN) of caffe.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;.caffemodel: weights of specified layer description.
    &lt;ul&gt;
      &lt;li&gt;TIPS: The layer descriptions seems also to be written into .caffemodel.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;lmdb/leveldb: the database of input images.
    &lt;ul&gt;
      &lt;li&gt;TIPS: the lmdb(B+ Tree) consume more memory that leveldb. But it’s faster than leveldb.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Refs: &lt;a href=&quot;http://www.lmdb.tech/doc/&quot;&gt;LMDB&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;file list: the file path of input images &amp;amp; the classes of each which follows file path.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;tools&quot;&gt;Tools&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;compute_image_mean: compute mean value of images into .binaryprototxt&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;upgrade_net_proto_text: Upgrade old prototxt file into new prototxt file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;convert_imageset: Convert images(png/jpg) into database (lmdb/leveldb)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">Caffe Tools</summary></entry><entry><title type="html">歌手 张韶涵</title><link href="http://localhost:4000/2018/06/06/%E6%AD%8C%E6%89%8B-%E5%BC%A0%E9%9F%B6%E6%B6%B5.html" rel="alternate" type="text/html" title="歌手 张韶涵" /><published>2018-06-06T00:00:00+08:00</published><updated>2018-06-06T00:00:00+08:00</updated><id>http://localhost:4000/2018/06/06/%E6%AD%8C%E6%89%8B%20%E5%BC%A0%E9%9F%B6%E6%B6%B5</id><content type="html" xml:base="http://localhost:4000/2018/06/06/%E6%AD%8C%E6%89%8B-%E5%BC%A0%E9%9F%B6%E6%B6%B5.html">&lt;h1 id=&quot;张韶涵&quot;&gt;张韶涵&lt;/h1&gt;</content><author><name></name></author><summary type="html">张韶涵</summary></entry><entry><title type="html">Google benchmark</title><link href="http://localhost:4000/2018/06/02/Google-Benchmark.html" rel="alternate" type="text/html" title="Google benchmark" /><published>2018-06-02T00:00:00+08:00</published><updated>2018-06-02T00:00:00+08:00</updated><id>http://localhost:4000/2018/06/02/Google%20Benchmark</id><content type="html" xml:base="http://localhost:4000/2018/06/02/Google-Benchmark.html">&lt;h1 id=&quot;google-benchmark&quot;&gt;Google Benchmark&lt;/h1&gt;

&lt;h3 id=&quot;basic-steps&quot;&gt;Basic Steps&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;```c++
#include &amp;lt;benchmark/benchmark.h&amp;gt;
static void BM_uint2str(benchmark::State&amp;amp; state) {
unsigned int num = 1234;
while (state.KeepRunning())
    (void) uint2str(num);
}
// Register the function as a benchmark
BENCHMARK(BM_uint2str);&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;BENCHMARK_MAIN();&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2. 
```c++
static void BM_vuint2vstr(benchmark::State&amp;amp; state) {
    vector&amp;lt;unsigned int&amp;gt; vuint;
    for (std::size_t i = 0; i &amp;lt; state.range_x(); ++i) {
        vuint.push_back(i);
    }
    
    vector&amp;lt;string&amp;gt; vstr;
    while (state.KeepRunning())
        vuint2vstr(vuint, vstr);
}
// Register the function as a benchmark
BENCHMARK(BM_vuint2vstr)-&amp;gt;Range(8, 8 &amp;lt;&amp;lt; 10);

BENCHMARK_MAIN();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Refs:
http://airekans.github.io/cpp/2015/04/18/google-benchmark
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Google Benchmark</summary></entry><entry><title type="html">Opencl caffe</title><link href="http://localhost:4000/2018/05/31/OpenCL-Caffe.html" rel="alternate" type="text/html" title="Opencl caffe" /><published>2018-05-31T00:00:00+08:00</published><updated>2018-05-31T00:00:00+08:00</updated><id>http://localhost:4000/2018/05/31/OpenCL%20Caffe</id><content type="html" xml:base="http://localhost:4000/2018/05/31/OpenCL-Caffe.html">&lt;h1 id=&quot;opencl-caffe&quot;&gt;OpenCL Caffe&lt;/h1&gt;

&lt;h2 id=&quot;opencl-caffe-1&quot;&gt;OpenCL Caffe&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://github.com/BVLC/caffe/tree/opencl
https://github.com/01org/caffe (Intel maintains)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;dependency&quot;&gt;Dependency&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;lmdb-mdb&lt;/li&gt;
  &lt;li&gt;gflags&lt;/li&gt;
  &lt;li&gt;glog&lt;/li&gt;
  &lt;li&gt;leveldb&lt;/li&gt;
  &lt;li&gt;snappy&lt;/li&gt;
  &lt;li&gt;Altas (Hard to compile) /OpenBLAS&lt;/li&gt;
  &lt;li&gt;ViennaCL&lt;/li&gt;
  &lt;li&gt;libDNN&lt;/li&gt;
  &lt;li&gt;OpenCL-ICD-Loader&lt;/li&gt;
  &lt;li&gt;OpenCL &amp;amp; OpenCL Driver&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;viennacl&quot;&gt;ViennaCL&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://github.com/viennacl/viennacl-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;libdnn&quot;&gt;libDNN&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://github.com/naibaf7/libdnn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;opencl-icd-loader&quot;&gt;OpenCL-ICD-Loader&lt;/h4&gt;
&lt;p&gt;It’s a proxy to switch between different implementations of OpenCL in the device.
The config file is located in /etc/OpenCl/vendors/XXXXX.icd&lt;/p&gt;

&lt;h4 id=&quot;opencl--driver&quot;&gt;OpenCL &amp;amp; Driver&lt;/h4&gt;
&lt;p&gt;Depends on your vendor.&lt;/p&gt;

&lt;h2 id=&quot;cucaffe&quot;&gt;cuCaffe&lt;/h2&gt;

&lt;h4 id=&quot;thrust&quot;&gt;Thrust&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://thrust.github.io/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;nccl&quot;&gt;NCCL&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://github.com/NVIDIA/nccl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;refs&quot;&gt;Refs&lt;/h4&gt;</content><author><name></name></author><summary type="html">OpenCL Caffe</summary></entry><entry><title type="html">Compile system</title><link href="http://localhost:4000/2018/05/31/Compile-System.html" rel="alternate" type="text/html" title="Compile system" /><published>2018-05-31T00:00:00+08:00</published><updated>2018-05-31T00:00:00+08:00</updated><id>http://localhost:4000/2018/05/31/Compile%20System</id><content type="html" xml:base="http://localhost:4000/2018/05/31/Compile-System.html">&lt;h1 id=&quot;compile-system&quot;&gt;Compile System&lt;/h1&gt;

&lt;h2 id=&quot;cmake&quot;&gt;CMake&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ..

cmake -DCMAKE_CXX_COMPILER=g++-5 ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Compile System</summary></entry><entry><title type="html">Boost cl</title><link href="http://localhost:4000/2018/05/22/Boost-CL.html" rel="alternate" type="text/html" title="Boost cl" /><published>2018-05-22T00:00:00+08:00</published><updated>2018-05-22T00:00:00+08:00</updated><id>http://localhost:4000/2018/05/22/Boost%20CL</id><content type="html" xml:base="http://localhost:4000/2018/05/22/Boost-CL.html"></content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Virtualbox skill</title><link href="http://localhost:4000/2018/05/15/VirtualBox-Skill.html" rel="alternate" type="text/html" title="Virtualbox skill" /><published>2018-05-15T00:00:00+08:00</published><updated>2018-05-15T00:00:00+08:00</updated><id>http://localhost:4000/2018/05/15/VirtualBox%20Skill</id><content type="html" xml:base="http://localhost:4000/2018/05/15/VirtualBox-Skill.html">&lt;h1 id=&quot;virtualbox-skill&quot;&gt;VirtualBox Skill&lt;/h1&gt;

&lt;h3 id=&quot;network&quot;&gt;Network&lt;/h3&gt;</content><author><name></name></author><summary type="html">VirtualBox Skill</summary></entry><entry><title type="html">Linuxshellskill</title><link href="http://localhost:4000/2018/05/15/LinuxShellSkill.html" rel="alternate" type="text/html" title="Linuxshellskill" /><published>2018-05-15T00:00:00+08:00</published><updated>2018-05-15T00:00:00+08:00</updated><id>http://localhost:4000/2018/05/15/LinuxShellSkill</id><content type="html" xml:base="http://localhost:4000/2018/05/15/LinuxShellSkill.html">&lt;h1 id=&quot;linux-shell-skill&quot;&gt;Linux Shell Skill&lt;/h1&gt;

&lt;h3 id=&quot;wget&quot;&gt;wget&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget -r -np -nH --cut-dirs=3 -R index.html http://hostname/aaa/bbb/ccc/ddd/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Explanation:&lt;/p&gt;

&lt;p&gt;It will download all files and subfolders in ddd directory:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;recursively (-r),&lt;/li&gt;
  &lt;li&gt;not going to upper directories, like ccc/… (-np),&lt;/li&gt;
  &lt;li&gt;not saving files to hostname folder (-nH),&lt;/li&gt;
  &lt;li&gt;but to ddd by omitting first 3 folders aaa, bbb, ccc (–cut-dirs=3)&lt;/li&gt;
  &lt;li&gt;excluding index.html files (-R index.html)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Refs: https://stackoverflow.com/questions/23446635/how-to-download-http-directory-with-all-files-and-sub-directories-as-they-appear
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ldconfig&quot;&gt;ldconfig&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ldconfig -v 2&amp;gt;/dev/null | grep -v ^$'\t'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Show linked library search path. 
Please check /etc/ld.so.conf.d/.&lt;/p&gt;

&lt;h3 id=&quot;grub&quot;&gt;Grub&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Refs: https://blog.csdn.net/zhu_liangwei/article/details/7847034
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;cat-procpidstatus&quot;&gt;cat /proc/PID/status&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;VmPeak:表示进程所占用最大虚拟内存大小&lt;/li&gt;
  &lt;li&gt;VmSize:表示进程当前虚拟内存大小&lt;/li&gt;
  &lt;li&gt;VmLck:表示被锁定的内存大小&lt;/li&gt;
  &lt;li&gt;VmHWM:表示进程所占用物理内存的峰值&lt;/li&gt;
  &lt;li&gt;VmRSS:表示进程当前占用物理内存的大小(与procrank中的RSS)&lt;/li&gt;
  &lt;li&gt;VmData:表示进程数据段的大小&lt;/li&gt;
  &lt;li&gt;VmStk:表示进程堆栈段的大小&lt;/li&gt;
  &lt;li&gt;VmExe:表示进程代码的大小&lt;/li&gt;
  &lt;li&gt;VmLib:表示进程所使用共享库的大小&lt;/li&gt;
  &lt;li&gt;VmPTE:表示进程页表项的大小&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Linux Shell Skill</summary></entry></feed>